{
    "swagger": "2.0",
    "info": {
        "description": "To manage the whole gptv.",
        "title": "GPTVerse Admin Backend",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "@yusufocaliskan",
            "email": "yusufocaliskan@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:4141",
    "paths": {
        "/api/v1/user/createByEmail": {
            "post": {
                "description": "Creates new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "New user",
                "operationId": "create-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "query params",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Language preference",
                        "name": "Accept-Language",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/usermodel.UserSwaggerParams"
                        }
                    }
                }
            }
        },
        "/api/v1/user/deleteById": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a user by given user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "operationId": "Delete-User",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usermodel.UserDeleteModel"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Language preference",
                        "name": "Accept-Language",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/translator.TranslationSwaggerResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/user/getUserById": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get user details by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get User",
                "operationId": "get-user-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "format": "ObjectID",
                        "description": "user id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Language preference",
                        "name": "Accept-Language",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/usermodel.UserWitoutPasswordModel"
                        }
                    }
                }
            }
        },
        "/api/v1/user/updateUserInformationsById": {
            "put": {
                "description": "Updates user informations by giving the Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "operationId": "update-user-informations",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usermodel.UserUpdateModel"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Language preference",
                        "name": "Accept-Language",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/usermodel.UserSwaggerParams"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "translator.TranslationEntry": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "translator.TranslationSwaggerResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/definitions/translator.TranslationEntry"
                }
            }
        },
        "usermodel.UserDeleteModel": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "usermodel.UserSwaggerParams": {
            "type": "object",
            "required": [
                "email",
                "password",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "fullname": {
                    "type": "string",
                    "example": "John Doe"
                },
                "name": {
                    "type": "string",
                    "example": "johndoe"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "moderator",
                        "user"
                    ]
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "usermodel.UserUpdateModel": {
            "type": "object",
            "required": [
                "email",
                "role",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "moderator",
                        "user"
                    ]
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "usermodel.UserWitoutPasswordModel": {
            "type": "object",
            "required": [
                "email",
                "role",
                "username"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "moderator",
                        "user"
                    ]
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}